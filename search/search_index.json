{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Tri par s\u00e9lection et par insertion Bienvenue, ce site se d\u00e9compose en plusieurs parties : COURS : Activit\u00e9 pr\u00e9liminaire sur les tris Cours tri par s\u00e9lection Cours tri par insertion (\u00e0 venir) PYTHON : Impl\u00e9mentation tri par insertion (\u00e0 venir)","title":"Tri par s\u00e9lection et par insertion"},{"location":"#tri-par-selection-et-par-insertion","text":"Bienvenue, ce site se d\u00e9compose en plusieurs parties : COURS : Activit\u00e9 pr\u00e9liminaire sur les tris Cours tri par s\u00e9lection Cours tri par insertion (\u00e0 venir) PYTHON : Impl\u00e9mentation tri par insertion (\u00e0 venir)","title":"Tri par s\u00e9lection et par insertion"},{"location":"activite_preliminaire/","text":"Activit\u00e9 pr\u00e9liminaire sur les tris L'objectif de cette activit\u00e9 est de d\u00e9terminer une strat\u00e9gie claire et pr\u00e9cise permettant, \u00e0 partir d'une suite de cartes arbitrairement choisies, d\u2019obtenir une suite de cartes tri\u00e9es dans l'ordre croissant suivant leur valeur faciale \u00e0 la fin du processus. On ne se souciera ici que des valeurs des cartes et non de leurs couleurs . Voici l' ordre des valeurs des cartes, de la moins forte \u00e0 la plus forte , que l'on utilisera : Note : Si la carte Joker existe dans votre jeu, on consid\u00e8rera qu'elle est plus forte que toutes les autres cartes. Partie 1 : Exp\u00e9rimentation La zone de jeu est constitu\u00e9e : d'une suite de 8 cartes auxquelles sont associ\u00e9es un indice de 0 \u00e0 7 , d'une zone temporaire dans laquelle on peut stocker l' indice ou la valeur d'une carte. Zone de jeu \u00c0 faire Par groupes de 2 \u00e0 3 personnes, vous devez : Disposer une suite de 8 cartes arbitrairement choisies sur votre table. \u00c9tablir, \u00e0 l'\u00e9crit, une suite d'instructions \u00ab en fran\u00e7ais \u00bb permettant de trier ces cartes dans l'ordre croissant. Votre strat\u00e9gie doit pouvoir \u00eatre reproduite sur n'importe quelle suite de cartes . Vous l'\u00e9crirez sur un bloc-note https://collab.infoforall.fr/ . Tester votre strat\u00e9gie sur diff\u00e9rentes suites de cartes et vous assurer qu'elle fonctionne toujours. Important Les seules op\u00e9rations \u00e9l\u00e9mentaires autoris\u00e9es sont les suivantes : comparer les valeurs de deux cartes , permuter (\u00e9changer) deux cartes , copier l'indice ou la valeur d'une carte de la suite dans la zone temporaire (et inversement), vous pouvez utiliser des conditions ( SI ... , SINON ) et des boucles ( TANT QUE , POUR ... ALLANT DE ... A ... ). Voici \u00e9galement quelques r\u00e8gles \u00e0 respecter : vous ne pouvez parcourir les cartes que de la gauche vers la droite (on ne revient pas en arri\u00e8re), si une t\u00e2che est r\u00e9p\u00e9titive, vous pouvez la nommer (cr\u00e9er un autre bloc d'instructions qui sera utilis\u00e9 dans le bloc principal), votre strat\u00e9gie doit \u00eatre suffisamment claire, mais vous n'avez pas obligation d'\u00e9crire un algorithme formel. Partie 2 : Bilan des strat\u00e9gies Afin de s'assurer de la clart\u00e9 de chaque strat\u00e9gie, chaque groupe tentera \u00e0 pr\u00e9sent de trier une suite de 8 cartes arbitrairement choisies en utilisant les strat\u00e9gies propos\u00e9es par les autres groupes . \u00c0 faire Par groupes de 2 \u00e0 3 personnes, vous devez : D\u00e9rouler les instructions propos\u00e9es par les autres groupes sur des suites de 8 cartes choisies arbitrairement . Indiquer quelles sont les strat\u00e9gies qui fonctionnent, et celles qui ne fonctionnent pas. Partie 3 : Tri par s\u00e9lection Principe du tri par s\u00e9lection Le tri par s\u00e9lection se d\u00e9roule comme suit : Chercher l' indice de la plus faible carte de la suite (\u00e0 partir de l'indice 0 ) et \u00e9changer cette carte avec celle qui est plac\u00e9e en premier . La premi\u00e8re carte est maintenant la plus faible . Chercher l' indice de la plus faible carte de la suite en partant du 2\u00e8me \u00e9l\u00e9ment (indice 1 ) et \u00e9changer cette carte avec celle qui est plac\u00e9e en deuxi\u00e8me . Les deux premi\u00e8res cartes sont les plus faibles et sont maintenant tri\u00e9es . Poursuivre ainsi jusqu\u2019\u00e0 l\u2019 avant derni\u00e8re carte de la liste. Note : Si la valeur la plus faible des cartes de la suite est associ\u00e9e \u00e0 plusieurs cartes, on consid\u00e8rera que la plus faible carte est la premi\u00e8re (en parcourant de gauche \u00e0 droite ) ayant cette valeur. \u00c0 faire 1 D\u00e9rouler la m\u00e9thode de tri par s\u00e9lection d\u00e9crite ci-dessus, avec une approche humaine d'abord, sur une suites de 8 cartes arbitrairement choisies afin de v\u00e9rifier son bon fonctionnement. On a ici exp\u00e9riment\u00e9 la m\u00e9thode de tri par s\u00e9lection avec une approche humaine , c'est-\u00e0-dire que vous avez utilis\u00e9 votre cerveau pour d\u00e9terminer facilement, \u00e0 chaque \u00e9tape, la carte la plus faible de la suite. Toutefois, en raisonnant avec une d\u00e9marche plus proche de la machine , la recherche de la carte la plus faible doit se d\u00e9composer en op\u00e9rations \u00e9l\u00e9mentaires, incluant notamment des affectations , des comparaisons et des conditions . Recherche de la plus faible carte Pour rechercher la plus faible carte de la suite de cartes \u00e0 partir d'un indice \\(i\\) donn\u00e9 : Stocker l' indice \\(i\\) dans la zone temporaire . En parcourant la suite de cartes de gauche \u00e0 droite , \u00e0 partir de l'indice \\(i + 1\\) et jusqu'au bout de la suite : Comparer les valeurs de chaque carte de la suite avec la valeur de la carte dont l' indice est stock\u00e9 dans la zone temporaire . SI une carte de la suite a une valeur strictement inf\u00e9rieure \u00e0 la valeur de la carte dont l' indice est stock\u00e9 dans la zone temporaire , remplacer l'ancien indice stock\u00e9 dans la zone temporaire par l' indice de cette carte . Renvoyer enfin l' indice contenu dans la zone temporaire . \u00c0 faire 2 Vous devez \u00e0 pr\u00e9sent : D\u00e9rouler de nouveau la m\u00e9thode de tri par s\u00e9lection , en d\u00e9composant la recherche de la carte la plus faible comme d\u00e9crit ci-dessus, sur plusieurs suites de 8 cartes arbitrairement choisies. Calculer, pour chaque suite de cartes, le nombre total de comparaisons de deux cartes ayant \u00e9t\u00e9 effectu\u00e9es. Que pouvez-vous en dire sur le co\u00fbt de ce tri ? Est-ce un tri efficace ?","title":"Activit\u00e9 pr\u00e9liminaire"},{"location":"activite_preliminaire/#activite-preliminaire-sur-les-tris","text":"L'objectif de cette activit\u00e9 est de d\u00e9terminer une strat\u00e9gie claire et pr\u00e9cise permettant, \u00e0 partir d'une suite de cartes arbitrairement choisies, d\u2019obtenir une suite de cartes tri\u00e9es dans l'ordre croissant suivant leur valeur faciale \u00e0 la fin du processus. On ne se souciera ici que des valeurs des cartes et non de leurs couleurs . Voici l' ordre des valeurs des cartes, de la moins forte \u00e0 la plus forte , que l'on utilisera : Note : Si la carte Joker existe dans votre jeu, on consid\u00e8rera qu'elle est plus forte que toutes les autres cartes.","title":"Activit\u00e9 pr\u00e9liminaire sur les tris"},{"location":"activite_preliminaire/#partie-1-experimentation","text":"La zone de jeu est constitu\u00e9e : d'une suite de 8 cartes auxquelles sont associ\u00e9es un indice de 0 \u00e0 7 , d'une zone temporaire dans laquelle on peut stocker l' indice ou la valeur d'une carte. Zone de jeu \u00c0 faire Par groupes de 2 \u00e0 3 personnes, vous devez : Disposer une suite de 8 cartes arbitrairement choisies sur votre table. \u00c9tablir, \u00e0 l'\u00e9crit, une suite d'instructions \u00ab en fran\u00e7ais \u00bb permettant de trier ces cartes dans l'ordre croissant. Votre strat\u00e9gie doit pouvoir \u00eatre reproduite sur n'importe quelle suite de cartes . Vous l'\u00e9crirez sur un bloc-note https://collab.infoforall.fr/ . Tester votre strat\u00e9gie sur diff\u00e9rentes suites de cartes et vous assurer qu'elle fonctionne toujours. Important Les seules op\u00e9rations \u00e9l\u00e9mentaires autoris\u00e9es sont les suivantes : comparer les valeurs de deux cartes , permuter (\u00e9changer) deux cartes , copier l'indice ou la valeur d'une carte de la suite dans la zone temporaire (et inversement), vous pouvez utiliser des conditions ( SI ... , SINON ) et des boucles ( TANT QUE , POUR ... ALLANT DE ... A ... ). Voici \u00e9galement quelques r\u00e8gles \u00e0 respecter : vous ne pouvez parcourir les cartes que de la gauche vers la droite (on ne revient pas en arri\u00e8re), si une t\u00e2che est r\u00e9p\u00e9titive, vous pouvez la nommer (cr\u00e9er un autre bloc d'instructions qui sera utilis\u00e9 dans le bloc principal), votre strat\u00e9gie doit \u00eatre suffisamment claire, mais vous n'avez pas obligation d'\u00e9crire un algorithme formel.","title":"Partie 1 : Exp\u00e9rimentation"},{"location":"activite_preliminaire/#partie-2-bilan-des-strategies","text":"Afin de s'assurer de la clart\u00e9 de chaque strat\u00e9gie, chaque groupe tentera \u00e0 pr\u00e9sent de trier une suite de 8 cartes arbitrairement choisies en utilisant les strat\u00e9gies propos\u00e9es par les autres groupes . \u00c0 faire Par groupes de 2 \u00e0 3 personnes, vous devez : D\u00e9rouler les instructions propos\u00e9es par les autres groupes sur des suites de 8 cartes choisies arbitrairement . Indiquer quelles sont les strat\u00e9gies qui fonctionnent, et celles qui ne fonctionnent pas.","title":"Partie 2 : Bilan des strat\u00e9gies"},{"location":"activite_preliminaire/#partie-3-tri-par-selection","text":"Principe du tri par s\u00e9lection Le tri par s\u00e9lection se d\u00e9roule comme suit : Chercher l' indice de la plus faible carte de la suite (\u00e0 partir de l'indice 0 ) et \u00e9changer cette carte avec celle qui est plac\u00e9e en premier . La premi\u00e8re carte est maintenant la plus faible . Chercher l' indice de la plus faible carte de la suite en partant du 2\u00e8me \u00e9l\u00e9ment (indice 1 ) et \u00e9changer cette carte avec celle qui est plac\u00e9e en deuxi\u00e8me . Les deux premi\u00e8res cartes sont les plus faibles et sont maintenant tri\u00e9es . Poursuivre ainsi jusqu\u2019\u00e0 l\u2019 avant derni\u00e8re carte de la liste. Note : Si la valeur la plus faible des cartes de la suite est associ\u00e9e \u00e0 plusieurs cartes, on consid\u00e8rera que la plus faible carte est la premi\u00e8re (en parcourant de gauche \u00e0 droite ) ayant cette valeur. \u00c0 faire 1 D\u00e9rouler la m\u00e9thode de tri par s\u00e9lection d\u00e9crite ci-dessus, avec une approche humaine d'abord, sur une suites de 8 cartes arbitrairement choisies afin de v\u00e9rifier son bon fonctionnement. On a ici exp\u00e9riment\u00e9 la m\u00e9thode de tri par s\u00e9lection avec une approche humaine , c'est-\u00e0-dire que vous avez utilis\u00e9 votre cerveau pour d\u00e9terminer facilement, \u00e0 chaque \u00e9tape, la carte la plus faible de la suite. Toutefois, en raisonnant avec une d\u00e9marche plus proche de la machine , la recherche de la carte la plus faible doit se d\u00e9composer en op\u00e9rations \u00e9l\u00e9mentaires, incluant notamment des affectations , des comparaisons et des conditions . Recherche de la plus faible carte Pour rechercher la plus faible carte de la suite de cartes \u00e0 partir d'un indice \\(i\\) donn\u00e9 : Stocker l' indice \\(i\\) dans la zone temporaire . En parcourant la suite de cartes de gauche \u00e0 droite , \u00e0 partir de l'indice \\(i + 1\\) et jusqu'au bout de la suite : Comparer les valeurs de chaque carte de la suite avec la valeur de la carte dont l' indice est stock\u00e9 dans la zone temporaire . SI une carte de la suite a une valeur strictement inf\u00e9rieure \u00e0 la valeur de la carte dont l' indice est stock\u00e9 dans la zone temporaire , remplacer l'ancien indice stock\u00e9 dans la zone temporaire par l' indice de cette carte . Renvoyer enfin l' indice contenu dans la zone temporaire . \u00c0 faire 2 Vous devez \u00e0 pr\u00e9sent : D\u00e9rouler de nouveau la m\u00e9thode de tri par s\u00e9lection , en d\u00e9composant la recherche de la carte la plus faible comme d\u00e9crit ci-dessus, sur plusieurs suites de 8 cartes arbitrairement choisies. Calculer, pour chaque suite de cartes, le nombre total de comparaisons de deux cartes ayant \u00e9t\u00e9 effectu\u00e9es. Que pouvez-vous en dire sur le co\u00fbt de ce tri ? Est-ce un tri efficace ?","title":"Partie 3 : Tri par s\u00e9lection"},{"location":"exercices_tri_selection/","text":"Exercices sur le tri par s\u00e9lection ...","title":"Exercices sur le tri par s\u00e9lection"},{"location":"exercices_tri_selection/#exercices-sur-le-tri-par-selection","text":"...","title":"Exercices sur le tri par s\u00e9lection"},{"location":"tri_selection/","text":"Le tri par s\u00e9lection Le tri par s\u00e9lection (du minimum ou du maximum ) est un algorithme de tri par comparaisons . Il s'agit d'un algorithme simple mais qui est, comme constat\u00e9 pendant l'activit\u00e9 pr\u00e9liminaire, inefficace . Pr\u00e9sentation du tri L'algorithme du tri par s\u00e9lection peut \u00eatre \u00e9crit de plusieurs mani\u00e8res diff\u00e9rentes : en it\u00e9ratif ou en r\u00e9cursif , en place ou non. Info Un tri est dit en place s'il modifie directement la structure qu\u2019il est en train de trier, plut\u00f4t que de cr\u00e9er et de renvoyer une nouvelle structure. L'algorithme pr\u00e9sent\u00e9 sera \u00e9crit de mani\u00e8re it\u00e9rative et en place . On pr\u00e9sentera l'algorithme du tri par s\u00e9lection du minimum . Pour simplifier les choses, on commence par s\u00e9parer l'algorithme de tri en 3 algorithmes : l'algorithme principal tri_selection(tableau) , l'algorithme minimum(tableau, debut) permettant la recherche de l'indice de l' \u00e9l\u00e9ment minimal du tableau \u00e0 partir de l'indice debut donn\u00e9, l'algorithme echanger(tableau, i, j) permettant d'\u00e9changer deux \u00e9l\u00e9ments d'indices i et j donn\u00e9s. Algorithme du tri par s\u00e9lection ALGORITHME : tri_selection ENTR\u00c9ES : tableau : un tableau d'\u00e9l\u00e9ments pouvant \u00eatre compar\u00e9s SORTIE : aucune (tri en place ) D\u00c9BUT \u2003\u2003n \u2190 longueur(tableau) \u2003\u2003 POUR i ALLANT DE 0 \u00c0 n - 2 \u2003\u2003\u2003\u2003indice_min \u2190 minimum(tableau, i) \u2003\u2003\u2003\u2003 SI indice_min \u2260 i, ALORS \u2003\u2003\u2003\u2003\u2003\u2003echanger(tableau, i, indice_min) \u2003\u2003 FIN POUR \u2003\u2003Renvoyer \u2205 FIN ALGORITHME Algorithme de recherche du minimum ALGORITHME : minimum ENTR\u00c9ES : tableau : un tableau d'\u00e9l\u00e9ments debut : l' indice \u00e0 partir duquel effectuer la recherche SORTIE : l' indice de l'\u00e9l\u00e9ment minimal dans l'intervalle [debut, longueur(tableau) - 1] du tableau D\u00c9BUT \u2003\u2003indice_min \u2190 debut \u2003\u2003 POUR i ALLANT DE debut + 1 \u00c0 longueur(tableau) - 1 \u2003\u2003\u2003 SI tableau[i] < tableau[indice_min], ALORS \u2003\u2003\u2003\u2003indice_min \u2190 i \u2003\u2003 FIN POUR \u2003\u2003Renvoyer indice_min FIN ALGORITHME Algorithme d'\u00e9change d'\u00e9l\u00e9ments' ALGORITHME : echanger ENTR\u00c9ES : tableau : un tableau d'\u00e9l\u00e9ments i : l' indice d'un \u00e9l\u00e9ment du tableau j : l' indice d'un autre \u00e9l\u00e9ment du tableau SORTIE : aucune (tri en place) D\u00c9BUT \u2003\u2003temp \u2190 tableau[i] \u2003\u2003tableau[i] \u2190 tableau[j] \u2003\u2003tableau[j] \u2190 temp \u2003\u2003Renvoyer \u2205 FIN ALGORITHME Voici enfin une version en un seul algorithme : Algorithme du tri par s\u00e9lection ALGORITHME : tri_selection ENTR\u00c9ES : tableau : un tableau d'\u00e9l\u00e9ments pouvant \u00eatre compar\u00e9s . SORTIE : aucune (tri en place ) D\u00c9BUT \u2003\u2003n \u2190 longueur(tableau) \u2003\u2003 POUR i ALLANT DE 0 \u00c0 n - 2 \u2003\u2003\u2003\u2003indice_min \u2190 i \u2003\u2003\u2003\u2003 POUR j ALLANT DE i + 1 \u00c0 n - 1 \u2003\u2003\u2003\u2003\u2003\u2003 SI tableau[j] < tableau[indice_min], ALORS \u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003indice_min \u2190 j \u2003\u2003\u2003\u2003 FIN POUR \u2003\u2003\u2003\u2003 SI indice_min \u2260 i, ALORS \u2003\u2003\u2003\u2003\u2003\u2003temp \u2190 tableau[i] \u2003\u2003\u2003\u2003\u2003\u2003tableau[i] \u2190 tableau[j] \u2003\u2003\u2003\u2003\u2003\u2003tableau[j] \u2190 temp \u2003\u2003 FIN POUR \u2003\u2003Renvoyer \u2205 FIN ALGORITHME Notes La premi\u00e8re boucle POUR s'arr\u00eate \u00e0 n - 2 car si tous les \u00e9l\u00e9ments de l'intervalle [0, longueur(tableau) - 2] sont tri\u00e9s , l'\u00e9l\u00e9ment d' indice longueur(tableau) - 1 est obligatoirement d\u00e9j\u00e0 \u00e0 la bonne position . La condition SI indice_min \u2260 i, ALORS permet d'\u00e9viter d'effectuer une permutation si l'\u00e9l\u00e9ment d'indice i correspond \u00e0 l'\u00e9l\u00e9ment minimal . Stabilit\u00e9 du tri Un tri est dit stable s'il pr\u00e9serve l\u2019 ordonnancement initial des \u00e9l\u00e9ments que l'ordre consid\u00e8re comme \u00e9gaux. Le tri par s\u00e9lection est instable car en cas de valeurs identiques dans le tableau initial, leur ordre relatif peut \u00eatre modifi\u00e9. Exemple de d\u00e9roulement du tri par s\u00e9lection Animation Voici une animation du tri par s\u00e9lection permettant de mieux visualiser le d\u00e9roulement de cet algorithme. \u00c0 vous de jouer D\u00e9roulez le tri par s\u00e9lection du minimum sur le tableau [5, 3, 1, 4, 6, 2] . Complexit\u00e9 du tri par s\u00e9lection ...","title":"Tri par s\u00e9lection"},{"location":"tri_selection/#le-tri-par-selection","text":"Le tri par s\u00e9lection (du minimum ou du maximum ) est un algorithme de tri par comparaisons . Il s'agit d'un algorithme simple mais qui est, comme constat\u00e9 pendant l'activit\u00e9 pr\u00e9liminaire, inefficace .","title":"Le tri par s\u00e9lection"},{"location":"tri_selection/#presentation-du-tri","text":"L'algorithme du tri par s\u00e9lection peut \u00eatre \u00e9crit de plusieurs mani\u00e8res diff\u00e9rentes : en it\u00e9ratif ou en r\u00e9cursif , en place ou non. Info Un tri est dit en place s'il modifie directement la structure qu\u2019il est en train de trier, plut\u00f4t que de cr\u00e9er et de renvoyer une nouvelle structure. L'algorithme pr\u00e9sent\u00e9 sera \u00e9crit de mani\u00e8re it\u00e9rative et en place . On pr\u00e9sentera l'algorithme du tri par s\u00e9lection du minimum . Pour simplifier les choses, on commence par s\u00e9parer l'algorithme de tri en 3 algorithmes : l'algorithme principal tri_selection(tableau) , l'algorithme minimum(tableau, debut) permettant la recherche de l'indice de l' \u00e9l\u00e9ment minimal du tableau \u00e0 partir de l'indice debut donn\u00e9, l'algorithme echanger(tableau, i, j) permettant d'\u00e9changer deux \u00e9l\u00e9ments d'indices i et j donn\u00e9s. Algorithme du tri par s\u00e9lection ALGORITHME : tri_selection ENTR\u00c9ES : tableau : un tableau d'\u00e9l\u00e9ments pouvant \u00eatre compar\u00e9s SORTIE : aucune (tri en place ) D\u00c9BUT \u2003\u2003n \u2190 longueur(tableau) \u2003\u2003 POUR i ALLANT DE 0 \u00c0 n - 2 \u2003\u2003\u2003\u2003indice_min \u2190 minimum(tableau, i) \u2003\u2003\u2003\u2003 SI indice_min \u2260 i, ALORS \u2003\u2003\u2003\u2003\u2003\u2003echanger(tableau, i, indice_min) \u2003\u2003 FIN POUR \u2003\u2003Renvoyer \u2205 FIN ALGORITHME Algorithme de recherche du minimum ALGORITHME : minimum ENTR\u00c9ES : tableau : un tableau d'\u00e9l\u00e9ments debut : l' indice \u00e0 partir duquel effectuer la recherche SORTIE : l' indice de l'\u00e9l\u00e9ment minimal dans l'intervalle [debut, longueur(tableau) - 1] du tableau D\u00c9BUT \u2003\u2003indice_min \u2190 debut \u2003\u2003 POUR i ALLANT DE debut + 1 \u00c0 longueur(tableau) - 1 \u2003\u2003\u2003 SI tableau[i] < tableau[indice_min], ALORS \u2003\u2003\u2003\u2003indice_min \u2190 i \u2003\u2003 FIN POUR \u2003\u2003Renvoyer indice_min FIN ALGORITHME Algorithme d'\u00e9change d'\u00e9l\u00e9ments' ALGORITHME : echanger ENTR\u00c9ES : tableau : un tableau d'\u00e9l\u00e9ments i : l' indice d'un \u00e9l\u00e9ment du tableau j : l' indice d'un autre \u00e9l\u00e9ment du tableau SORTIE : aucune (tri en place) D\u00c9BUT \u2003\u2003temp \u2190 tableau[i] \u2003\u2003tableau[i] \u2190 tableau[j] \u2003\u2003tableau[j] \u2190 temp \u2003\u2003Renvoyer \u2205 FIN ALGORITHME Voici enfin une version en un seul algorithme : Algorithme du tri par s\u00e9lection ALGORITHME : tri_selection ENTR\u00c9ES : tableau : un tableau d'\u00e9l\u00e9ments pouvant \u00eatre compar\u00e9s . SORTIE : aucune (tri en place ) D\u00c9BUT \u2003\u2003n \u2190 longueur(tableau) \u2003\u2003 POUR i ALLANT DE 0 \u00c0 n - 2 \u2003\u2003\u2003\u2003indice_min \u2190 i \u2003\u2003\u2003\u2003 POUR j ALLANT DE i + 1 \u00c0 n - 1 \u2003\u2003\u2003\u2003\u2003\u2003 SI tableau[j] < tableau[indice_min], ALORS \u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003indice_min \u2190 j \u2003\u2003\u2003\u2003 FIN POUR \u2003\u2003\u2003\u2003 SI indice_min \u2260 i, ALORS \u2003\u2003\u2003\u2003\u2003\u2003temp \u2190 tableau[i] \u2003\u2003\u2003\u2003\u2003\u2003tableau[i] \u2190 tableau[j] \u2003\u2003\u2003\u2003\u2003\u2003tableau[j] \u2190 temp \u2003\u2003 FIN POUR \u2003\u2003Renvoyer \u2205 FIN ALGORITHME Notes La premi\u00e8re boucle POUR s'arr\u00eate \u00e0 n - 2 car si tous les \u00e9l\u00e9ments de l'intervalle [0, longueur(tableau) - 2] sont tri\u00e9s , l'\u00e9l\u00e9ment d' indice longueur(tableau) - 1 est obligatoirement d\u00e9j\u00e0 \u00e0 la bonne position . La condition SI indice_min \u2260 i, ALORS permet d'\u00e9viter d'effectuer une permutation si l'\u00e9l\u00e9ment d'indice i correspond \u00e0 l'\u00e9l\u00e9ment minimal . Stabilit\u00e9 du tri Un tri est dit stable s'il pr\u00e9serve l\u2019 ordonnancement initial des \u00e9l\u00e9ments que l'ordre consid\u00e8re comme \u00e9gaux. Le tri par s\u00e9lection est instable car en cas de valeurs identiques dans le tableau initial, leur ordre relatif peut \u00eatre modifi\u00e9. Exemple de d\u00e9roulement du tri par s\u00e9lection Animation Voici une animation du tri par s\u00e9lection permettant de mieux visualiser le d\u00e9roulement de cet algorithme. \u00c0 vous de jouer D\u00e9roulez le tri par s\u00e9lection du minimum sur le tableau [5, 3, 1, 4, 6, 2] .","title":"Pr\u00e9sentation du tri"},{"location":"tri_selection/#complexite-du-tri-par-selection","text":"...","title":"Complexit\u00e9 du tri par s\u00e9lection"}]}